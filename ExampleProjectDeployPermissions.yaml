AWSTemplateFormatVersion: '2010-09-09'
Description: Permissions for deploying the example project
Resources:
  ExampleProjectCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
      Description: Policy for deploy permissions for the example project
      ManagedPolicyArns:
        - !Sub arn:aws:iam::${AWS::AccountId}:policy/cross-account-service-role/CrossAccount-Base
        - !Ref ExampleProjectDeployPolicy
      Path: /cross-account-service-role/
      RoleName: ExampleProject-DeployPermissions

  ExampleProjectDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for deploy permissions for the example project
      ManagedPolicyName: ExampleProject-DeployPermissions
      Path: /cross-account-service-role/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - dynamodb:CreateGlobalTable
              - dynamodb:CreateTable*
              - dynamodb:DeleteTable*
              - dynamodb:Describe*
              - dynamodb:List*
              - dynamodb:TagResource
              - dynamodb:UntagResource
              - dynamodb:UpdateContinuousBackups
              - dynamodb:UpdateGlobalTable*
              - dynamodb:UpdateTable*
              - dynamodb:UpdateTimeToLive
            Effect: Allow
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ExampleProject
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ExampleProject/*

          - Action:
              - lambda:AddLayerVersionPermission
              - lambda:AddPermission
              - lambda:CreateAlias
              - lambda:CreateEventSourceMapping
              - lambda:CreateFunction
              - lambda:DeleteAlias
              - lambda:DeleteEventSourceMapping
              - lambda:DeleteFunction*
              - lambda:DeleteLayerVersion
              - lambda:DeleteProvisionedConcurrencyConfig
              - lambda:GetAccountSettings
              - lambda:GetAlias
              - lambda:GetEventSourceMapping
              - lambda:GetFunction*
              - lambda:GetLayerVersion*
              - lambda:GetPolicy
              - lambda:GetProvisionedConcurrencyConfig
              - lambda:List*
              - lambda:PublishLayerVersion
              - lambda:PublishVersion
              - lambda:PutFunctionConcurrency
              - lambda:PutFunctionEventInvokeConfig
              - lambda:PutProvisionedConcurrencyConfig
              - lambda:RemoveLayerVersionPermission
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:UpdateAlias
              - lambda:UpdateEventSourceMapping
              - lambda:UpdateFunction*
            Effect: Allow
            Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ExampleProject-LambdaFunction
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ExampleProject-LambdaFunction:*
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:event-source-mapping:* # probably should put a conditional on this

          - Action:
              - apigateway:* # should limit this to just my API

              - logs:* # should limit this to just my logs
            Effect: Allow
            Resource:
              - '*'

          - Action:
              - iam:Get*
              - iam:List*
            Effect: Allow
            Resource:
              - '*'

          - Action:
              - iam:AttachRolePolicy
              - iam:CreatePolicy
              - iam:CreatePolicyVersion
              - iam:CreateRole
              - iam:CreateServiceLinkedRole
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:DeleteRole
              - iam:DeleteServiceLinkedRole
              - iam:DetachRolePolicy
              - iam:PassRole
              - iam:SetDefaultPolicyVersion
              - iam:TagRole
              - iam:UntagRole
              - iam:UpdateRole
              - iam:UpdateRoleDescription
            Effect: Allow
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/example-project/*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/example-project/*
